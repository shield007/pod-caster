<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V3.1//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
    <!ENTITY apptitle "@@name@@">   
    <!ENTITY version "@@version@@">
	<!ENTITY apptitle "Pod Caster">	
	<!ENTITY version "1.2">
	<!ENTITY podcaster "podcaster">	
	<!ENTITY capturestream "capture-stream">
    <!ENTITY copyrightdate "2008-2011">
    <!ENTITY copyrightholder "John-Paul Stanford">
]>
<book>
	<bookinfo>
		<title>&apptitle; user guide</title>
		<authorgroup>
			<author>
				<firstname>John-Paul</firstname>
				<surname>Stanford</surname>
				<affiliation>
					<address><email>dev@stanwood.org.uk</email></address>
				</affiliation>
			</author>			
		</authorgroup>
		<copyright>
			<year>2007</year>
			<holder>John-Paul Stanford</holder>
		</copyright>
		<abstract>	
			<para>
				This document describes usage of the application &apptitle; version &version;
			</para>
		</abstract>
	</bookinfo>	
	<chapter id="introduction">
		<title>Introduction</title>			
		<para>
			&apptitle; is a application which can capture Internet radio stations and store 
			them locally. It can then add them to a pod cast for downloading onto portal devices.
			 The encoded podcast/media files can have cover art/meta data added to them.
		</para>	
		<sect1>
			<title>Features</title>
			<para>
				<itemizedlist>
					<listitem><para>Capture Internet radio to audio files.</para></listitem>
					<listitem><para>Create MP3, WAV, FLAC and MP4 files.</para></listitem>
					<listitem><para>Encodes metadata and cover art into the media files.</para></listitem>
					<listitem><para>Create podcast from captured radio stations.</para></listitem>
					<listitem><para>Supports real audio and Microsoft ASF format streams via mplayer application.</para></listitem>					
					<listitem><para>Supports BBC iPlayer streams via get_iplayer application.</para></listitem>
				</itemizedlist>				
			</para>
		</sect1>	
	</chapter>
	<chapter id="installation">
		<title>Installation</title>
		<para>
			Their are a few different ways to install &apptitle;. The different distributions 
		    can be found at <ulink url="http://code.google.com/p/pod-caster/downloads/list"><citetitle>Downloads</citetitle></ulink> 
		</para>
		<para>
			All of the distributions will require a Java 1.6 compatible JRE.
		</para>
		<sect1>
			<title>1. Linux Binary Distribution Packages</title>
			<para>
				Their are several linux distribution packages that can be found in the downloads section of the website.
				If your distribution uses RPM packages, then following these instructions.
				<orderedlist>
					<listitem><para>Pick the packages for your distribution</para></listitem>				
					<listitem><para>Download them to a directory</para></listitem>					
					<listitem><para>Change to that directory from the console</para></listitem>					
					<listitem><para>Log in as root and run the command <command>rpm -Uvh *.rpm</command></para></listitem>
				</orderedlist>				
			</para>
			<para>
				This will install the the application and a scripts to launch it. This will install the scripts <command>/usr/bin/&capturestream;</command> and <command>/usr/bin/&podcaster;</command>.
			</para>
		</sect1>		
		<sect1>
			<title>2. Any platform static Jar Disturbution</title>
			<para>
				Their is a static jar distribution available on the downloads page. This will run on any platform with the
				correct JRE. Simply download it too your system, and type the command:
				<cmdsynopsis><command>java -jar podcaster-&version;-static-bin.jar </command><arg>options</arg></cmdsynopsis>
			    This can be used to caputre audio and add it to a podcast the same command line parameters 
			    as the <link linkend="podcastercmd">podcaster</link> script.
			</para>
		</sect1>
	</chapter>
	<chapter id="usage">
		<title>CLI Usage</title>
		<para></para>
		<sect1 id="podcastercmd">
			<title id="podcastercmd.title">&podcaster;</title>
			<para>
				The &podcaster; command is used capture audio from internet radio stations and store it as a audio file 
				in a directory. This audio file is then added to a podcast.
				<cmdsynopsis>
					<command>&podcaster;</command>				
					<arg>-h</arg>
					<arg>-v</arg>																
					<arg>-c</arg>				
					<arg>-p</arg>
					<arg>-l</arg>										 
				</cmdsynopsis>				
			</para>				
			<para>
			This command uses the system tools to capture audio streams specified in the configuation file to a audio file.
			These are then added to a podcast. All the configuration for the podcasts and audio file is done via a configuartion
			file. See the <link linkend="configuration">configuration chapter</link> for more information on the format. 
			</para>												
			<sect2>				
					<title>Optional arguemnts:</title>					
					<sect3>
						<title>-l, --log_config</title>
						<para>This option is used to control the loggin of the tool. The default option if this option is
						missing is <emphasis>INFO</emphasis>, which will log only messages considered suiteable for information
						level. If the option <emphasis>DEBUG</emphasis> is used then their will also be debug messages and the
						format will be changed to make debuging easier.</para>
						<para>
							It's also possible to pass a log4j configuration file path to this option which will cause the logging
							setup to be configured with the contents of the file.
						</para>
					</sect3>
					<sect3>
						<title>-h, --help</title>
						<para>Show the help message</para>
					</sect3>
					<sect3>
						<title>-c, --config_file</title>
						<para>
						This option is used to override the default configuration file been used.  
						</para>
					</sect3>
					<sect3>
						<title>-v, --version</title>
						<para>This is used to display the application version</para>
					</sect3>					 
			</sect2>
			<sect2>				
					<title>Required arguemnts:</title>
					<sect3>
						<title>-p, --podcast</title>
						<para>The ID of the podcast from the configuration file</para>
					</sect3>					
			</sect2>
			<sect2>
				<title>Examples</title>
				<para>
					<example>
						<title>Using &podcaster; in a cron job</title>
						<para>
						The following line is a example of using podcaster to record a radio show and insert it into a podcast. 
						The line is a crontab entry set to execute the podcaster command at the correct time. This will record 
						the Zane Lowe show from radio1 on a monday night and make a podcast out of it. It reads the details of
						the podcast with the id "zaneLowe" from the configuration. 																
						<code>							
						50 18 * * 1 /usr/bin/podcaster -p zaneLowe
						</code>
						</para>
					</example>										
				</para>
			</sect2>
	</sect1>
		<sect1 id="capturestreamcmd">
			<title id="capturestreamcmd.title">&capturestream;</title>
			<para>
				The &capturestream; command is used capture audio from internet and store it in a media file.
				<cmdsynopsis>
					<command>&capturestream;</command>				
					<arg>-h</arg>
					<arg>-v</arg>																
					<arg>-c</arg>				
					<arg>-p</arg>
					<arg>-l</arg>
					<arg>-o</arg>										 
				</cmdsynopsis>				
			</para>
			<para>
			This command uses the system tools to retrive the audio and encode it into audio files, by default
			the tool will look for these in on the path, however it possible to change the location of these via a configuration
			file. See the <link linkend="configuration">configuration chapter</link> for more information on the format. 
			</para>	
			<para>
			The details of audio file been captured is specified by the podcast ID and the details are configured in
			the configuartion file.
			</para>
			<sect2>				
					<title>Optional arguemnts:</title>					
					<sect3>
						<title>-l, --log_config</title>
						<para>This option is used to control the loggin of the tool. The default option if this option is
						missing is <emphasis>INFO</emphasis>, which will log only messages considered suiteable for information
						level. If the option <emphasis>DEBUG</emphasis> is used then their will also be debug messages and the
						format will be changed to make debuging easier.</para>
						<para>
							It's also possible to pass a log4j configuration file path to this option which will cause the logging
							setup to be configured with the contents of the file.
						</para>
					</sect3>
					<sect3>
						<title>-h, --help</title>
						<para>Show the help message</para>
					</sect3>
					<sect3>
						<title>-c, --config_file</title>
						<para>
						This option is used to override the default configuration file been used.  
						</para>
					</sect3>
					<sect3>
						<title>-v, --version</title>
						<para>This is used to display the application version</para>
					</sect3>					 
			</sect2>
			<sect2>				
					<title>Required arguemnts:</title>
					<sect3>
						<title>-p, --podcast</title>
						<para>The ID of the podcast from the configuration file</para>
					</sect3>
					<sect3>
						<title>-o, --output</title>
						<para>The path to the file the captured audio should be saved in.</para>
					</sect3>
										
			</sect2>
		</sect1>
	</chapter>
	<chapter id="configuration">
		<title>Configuration</title>
		<para>The applications make use of a XML configuration file. This
			  tells them which for example were to find the system tools like mplayer and ffmpeg
		</para>
		<para>
			The applications have CLI options that can be used too tell it which configuration
			file to use. If this option is not present, then it will look for the file at the 
			locations <filename>/etc/podcaster-conf.xml</filename> or <filename>~/.podcaster/podcaster-conf.xml</filename>. 			
		</para>
		<para>
		</para>		
		<para>					
			<example>		
				<title>A configuration file for downloading from iPlayer and a Stream</title>
				<programlisting>
			<![CDATA[<podcaster>
     <!-- Configure the paths to system tools that are used --> 
     <global>
     	<configDirectory>$HOME/.podcaster</configDirectory>
		<mplayer-path>/usr/bin/mplayer</mplayer-path>
		<ffmpeg-path>/usr/bin/ffmpeg</ffmpeg-path>
		<get-iplayer-path>/usr/bin/get_iplayer</get-iplayer-path>
     </global>
     
     <!-- The details used to download the zane lowe radio show from BBC iPlayer --> 
	 <podcast id="zaneLowe" rssFile="/srv/www/htdocs/podcasts/radio/zane-lowe.xml" rssUrl="http://stanwood0.homeip.net/podcasts/radio/zane-lowe.xml" maxEntries="15">
        <metadata>
            <feed>
                <title>Zane Lowe</title>
                <image url="http://node1.bbcimg.co.uk/iplayer/images/episode/b00lgm79_640_360.jpg"/>
                <copyright>BBC</copyright>
                <artist>Zane Lowe</artist>
                <description>Two hours of the best new and cutting-edge music.</description>
            </feed>
            <entry>
                <description>Two hours of the best new and cutting-edge music.</description>
            </entry>
        </metadata>
        <iplayer episode="Radio 1" captureTime="7200000"/>
    </podcast>
    
    <!-- A Example of using a stream -->
    <podcast id="radio" rssFile="/srv/www/htdocs/podcasts/radio.rss" rssUrl="http://blah.com/podcasts/radio.rss" maxEntries="10">
		<metadata>
		   <feed>
		      <title>A test feed</title>
		      <image url="http://www.bbc.co.uk/iplayer/images/brand/b006wq52_512_288.jpg"/>
		      <copyright>Copyright</copyright>
		      <artist>A Author</artist>
		      <description>This is a test radio steam feed</description>
		    </feed>
		    <entry>
		      <description>This is a test radio stream entry</description>
		    </entry>		    
		</metadata>
		<radioStream url="http://www.bbc.co.uk/radio1/wm_asx/aod/radio1_hi.asx" captureTime="10000"/>
	</podcast>
</podcaster>]]>			
				</programlisting>
			</example>						
		</para>		
	</chapter>
	<chapter id="credits-and-licenses">
		<title>Credits and Licenses</title>
		
		<para>&apptitle;</para>
		<itemizedlist>
			<listitem>
				<para>John-Paul Stanford <email>dev@stanwood.org.uk</email> - Original Author</para>
			</listitem>
		</itemizedlist>
		<para>
        	Documentation copyright &copyrightdate;, &copyrightholder;
            <email>dev@stanwood.org.uk</email>
		</para>		
	</chapter>
	
</book>
